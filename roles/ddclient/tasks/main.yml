---
- name: Ensure temp dir exists
  ansible.builtin.file:
    path: "{{ dd__tmp_dir }}"
    state: directory
    mode: u+rwx

- name: Create volume to hold ddclient config
  containers.podman.podman_volume:
    name: "{{ dd__volume }}"
    state: present

- name: Prepare ddclient.conf
  ansible.builtin.template:
    src: ddclient.conf.j2
    dest: "{{ dd__tmp_dir }}/ddclient.conf"
    mode: u+rw

- name: Copy ddclient.conf to volume
  ansible.builtin.include_role:
    name: podman_copy
  vars:
    pod_cp__src_dir_or_volume: "{{ dd__tmp_dir }}"
    pod_cp__dest_dir_or_volume: "{{ dd__volume }}"

- name: Delete temp dir
  ansible.builtin.file:
    path: "{{ dd__tmp_dir }}"
    state: absent

# stop pod via systemd, otherwise systemd and podman fight
- name: "Disable {{ dd__pod }} via systemd"
  ansible.builtin.systemd:
    name: "pod-{{ dd__pod }}"
    enabled: false
    state: stopped
    scope: user
  ignore_errors: true  # nothing to stop if it doesn't exist
  tags: skip_ansible_lint

- name: get pod info
  containers.podman.podman_pod_info:
    name: "{{ dd__pod }}"
  register: _dd__podinfo

- name: stop pod if running
  containers.podman.podman_pod:
    name: "{{ dd__pod }}"
    state: stopped
  when: (_dd__podinfo.pods | length > 0) and (_dd__podinfo.pods[0].State == 'Running')

- name: "Create pod {{ dd__pod }}"
  containers.podman.podman_pod:
    name: "{{ dd__pod }}"
    state: started

- name: "Create container {{ dd__container }}"
  containers.podman.podman_container:
    name: "{{ dd__container }}"
    image: docker.io/linuxserver/ddclient
    pod: "{{ dd__pod }}"
    volume: "{{ dd__volume }}:/config"
    state: started
    label:
      io.containers.autoupdate: image

- name: "Ensure systemd config directory exists"
  ansible.builtin.file:
    path: "{{ dd__systemd_dir }}"
    state: directory
    mode: u+rwx

- name: Create systemd unit files
  containers.podman.podman_pod:
    name: "{{ dd__pod }}"
    generate_systemd:
      new: true
      path: "{{ dd__systemd_dir }}"

- name: Enable ddclient via systemd
  ansible.builtin.systemd:
    name: "pod-{{ dd__pod }}"
    enabled: true
    state: started
    scope: user
    daemon_reload: true
