---
- name: delete current backup directory on controller
  ansible.builtin.file:
    path: "{{ podman_vol_bu__control_dir }}"
    state: absent
  delegate_to: localhost

- name: create backup directory on controller
  ansible.builtin.file:
    path: "{{ podman_vol_bu__control_dir | dirname }}"
    state: directory
    mode: u+rwx
  delegate_to: localhost

- name: make sure remote temp directory does not exist
  ansible.builtin.file:
    path: "{{ podman_vol_bu__temp_remote_dir }}"
    state: absent
    mode: u+rwx

- name: Ensure temp dir exists
  ansible.builtin.file:
    path: "{{ podman_vol_bu__temp_remote_dir }}"
    state: directory
    mode: u+rw

- name: copy data from volume
  ansible.builtin.include_role:
    name: podman_copy
  vars:
    pod_cp__src_dir_or_volume: "{{ podman_vol_bu__volume }}"
    pod_cp__dest_dir_or_volume: "{{ podman_vol_bu__temp_remote_dir }}"

# hack:
# disappointing:
# todo: we are hardcoding the ansible_user below, if we try to use a variable here, it does not seem to get evaluated...
#   additionally, we need to specify the ansible_user variable in the top level playbook section.  if we define this as a var
#   under include_role - this will also fail.  i suspect i am not appreciating some of the variable hierarchy here, but am leaving
#   as is for now as i've wasted a lot of time on this and need to get the overall playbook working
- name: copy files to controller
  ansible.posix.synchronize:
    src: "{{ podman_vol_bu__temp_remote_dir }}/"
    dest: "{{ podman_vol_bu__control_dir }}"
    mode: pull
  vars:
    ansible_user: svc_www_maw  # "{{ maw_current__prod_username }}"
  delegate_to: localhost

- name: finally, delete remote temp directory
  ansible.builtin.file:
    path: "{{ podman_vol_bu__temp_remote_dir }}"
    state: absent

- name: check if files were copied to controller
  ansible.builtin.stat:
    path: "{{ podman_vol_bu__control_dir }}"
  delegate_to: localhost
  register: _podman_vol_bu__control_dir_stat_result

- name: create empty dir if no files were in volume
  ansible.builtin.file:
    path: "{{ podman_vol_bu__control_dir }}"
    state: directory
    mode: u+rwx
  delegate_to: localhost
  when: not _podman_vol_bu__control_dir_stat_result.stat.exists
