---
- name: "Temporarily set SSH username to {{ ddclient_svc_account }}"
  ansible.builtin.set_fact:
    orig_ansible_user: "{{ ansible_user }}"
    ansible_user: "{{ ddclient_svc_account }}"
    ddclient_podname: ddclient-pod
  changed_when: false
  delegate_to: localhost

- name: Create ddclient config volume
  containers.podman.podman_volume:
    name: ddclient_config
    state: present
  register: ddclient_volume

# https://stackoverflow.com/questions/52668990/ansible-copy-files-to-docker-volume
- name: create temporary data-only container
  containers.podman.podman_container:
    name: temp_data_container
    image: docker.io/tianon/true
    state: present
    volumes:
    - ddclient_config:/data

- name: Prepare ddclient config
  ansible.builtin.template:
    src: ddclient.conf
    dest: ddclient.conf

- name: copy file to volume
  ansible.builtin.command:
    argv:
      - podman
      - cp
      - ddclient.conf
      - temp_data_container:/data

- name: delete temp file
  ansible.builtin.file:
    path: ddclient.conf
    state: absent

- name: stop data only container
  containers.podman.podman_container:
    name: temp_data_container
    state: absent

- name: Create ddclient-pod
  containers.podman.podman_pod:
    name: "{{ ddclient_podname }}"
    state: started

- name: Pull ddclient image
  containers.podman.podman_image:
    name: docker.io/linuxserver/ddclient
    state: present

- name: Create ddclient-container
  containers.podman.podman_container:
    name: ddclient-container
    image: linuxserver/ddclient
    pod: "{{ ddclient_podname }}"
    volume: ddclient_config:/config
    state: started
    label:
      io.containers.autoupdate: image

- name: Create systemd unit files
  containers.podman.podman_pod:
    name: "{{ ddclient_podname }}"
    generate_systemd:
      new: yes
      path: .config/systemd/user
      container_prefix: ""
      pod_prefix: ""
      separator: ""

- name: Enable ddclient via systemd
  ansible.builtin.systemd:
    name: ddclient-pod
    enabled: yes
    state: started
    scope: user

- name: "Reset SSH username to {{ orig_ansible_ssh_user }}"
  ansible.builtin.set_fact:
    ansible_user: "{{ orig_ansible_user }}"
  changed_when: false
  delegate_to: localhost
