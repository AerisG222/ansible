---
- name: backup postgres roles and databases
  ansible.builtin.include_role:
    name: maw_prod_postgres_backup

- name: backup gdrive credentials volume
  ansible.builtin.include_role:
    name: maw_prod_gdrive_creds_backup

- name: backup google credentials volume
  ansible.builtin.include_role:
    name: maw_prod_google_creds_backup

- name: backup lets encrypt certs volume
  ansible.builtin.include_role:
    name: podman_backup_volume
  vars:
    podman_vol_bu__volume: "{{ maw_prod_certbot_certs_bu__volume }}"
    podman_vol_bu__control_dir: "{{ maw_prod_certbot_certs_bu__control_dir }}"
    podman_vol_bu__temp_remote_dir: "{{ maw_prod_certbot_certs_bu__temp_remote_dir }}"
  when: maw__do_letsencrypt_backup

- name: backup lets encrypt validation volume
  ansible.builtin.include_role:
    name: podman_backup_volume
  vars:
    podman_vol_bu__volume: "{{ maw_prod_certbot_validation_bu__volume }}"
    podman_vol_bu__control_dir: "{{ maw_prod_certbot_validation_bu__control_dir }}"
    podman_vol_bu__temp_remote_dir: "{{ maw_prod_certbot_validation_bu__temp_remote_dir }}"
  when: maw__do_letsencrypt_backup

- name: backup maw certs volume
  block:
    - name: backup maw certs volume
      ansible.builtin.include_role:
        name: podman_backup_volume
      vars:
        podman_vol_bu__volume: "{{ maw_prod_maw_cert_bu__volume }}"
        podman_vol_bu__control_dir: "{{ maw_prod_maw_cert_bu__control_dir }}"
        podman_vol_bu__temp_remote_dir: "{{ maw_prod_maw_cert_bu__temp_remote_dir }}"

    - name: legacy volume has an extra directory level named 'internal' - see if that exists
      ansible.builtin.stat:
        path: "{{ maw_prod_maw_cert_bu__control_dir }}/internal"
      register: _maw_prod_maw_cert_bu__internal_exists
      delegate_to: localhost

    - name: move certs out of internal if needed
      ansible.builtin.shell:
        cmd: "mv {{ maw_prod_maw_cert_bu__control_dir }}/internal/* {{ maw_prod_maw_cert_bu__control_dir }}"
      delegate_to: localhost
      when: _maw_prod_maw_cert_bu__internal_exists.stat.exists

    - name: remove internal dir if needed
      ansible.builtin.file:
        path: "{{ maw_prod_maw_cert_bu__control_dir }}/internal"
        state: absent
      delegate_to: localhost
      when: _maw_prod_maw_cert_bu__internal_exists.stat.exists
  when: maw__do_maw_certs_backup

- name: backup files in uploads volume
  ansible.builtin.include_role:
    name: podman_backup_volume
  vars:
    podman_vol_bu__volume: "{{ maw_prod_uploads_bu__volume }}"
    podman_vol_bu__control_dir: "{{ maw_prod_uploads_bu__control_dir }}"
    podman_vol_bu__temp_remote_dir: "{{ maw_prod_uploads_bu__temp_remote_dir }}"
  when: maw__do_uploads_backup

- name: backup api dataprotection volume
  ansible.builtin.include_role:
    name: podman_backup_volume
  vars:
    podman_vol_bu__volume: "{{ maw_prod_apidp_bu__volume }}"
    podman_vol_bu__control_dir: "{{ maw_prod_apidp_bu__control_dir }}"
    podman_vol_bu__temp_remote_dir: "{{ maw_prod_apidp_bu__temp_remote_dir }}"
  when: maw__do_dataprotection_backup

- name: backup auth dataprotection volume
  ansible.builtin.include_role:
    name: podman_backup_volume
  vars:
    podman_vol_bu__volume: "{{ maw_prod_authdp_bu__volume }}"
    podman_vol_bu__control_dir: "{{ maw_prod_authdp_bu__control_dir }}"
    podman_vol_bu__temp_remote_dir: "{{ maw_prod_authdp_bu__temp_remote_dir }}"
  when: maw__do_dataprotection_backup

- name: backup www dataprotection volume
  ansible.builtin.include_role:
    name: podman_backup_volume
  vars:
    podman_vol_bu__volume: "{{ maw_prod_wwwdp_bu__volume }}"
    podman_vol_bu__control_dir: "{{ maw_prod_wwwdp_bu__control_dir }}"
    podman_vol_bu__temp_remote_dir: "{{ maw_prod_wwwdp_bu__temp_remote_dir }}"
  when: maw__do_dataprotection_backup

- name: backup reverse geocode volume
  ansible.builtin.include_role:
    name: podman_backup_volume
  vars:
    podman_vol_bu__volume: "{{ maw_prod_revgeo_bu__volume }}"
    podman_vol_bu__control_dir: "{{ maw_prod_revgeo_bu__control_dir }}"
    podman_vol_bu__temp_remote_dir: "{{ maw_prod_revgeo_bu__temp_remote_dir }}"
  when: maw__do_revgeo_backup
