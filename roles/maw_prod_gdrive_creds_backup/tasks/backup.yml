---
- name: delete current backup directory on controller
  ansible.builtin.file:
    path: "{{ maw_prod_gdrive_creds_bu__control_dir }}"
    state: absent
  delegate_to: localhost

- name: make sure remote temp directory does not exist
  ansible.builtin.file:
    path: "{{ maw_prod_gdrive_creds_bu__temp_remote_dir }}"
    state: absent
    mode: u+rwx

- name: Ensure temp dir exists
  ansible.builtin.file:
    path: "{{ maw_prod_gdrive_creds_bu__temp_remote_dir }}"
    state: directory
    mode: u+rw

- name: copy google drive credentials from volume
  ansible.builtin.include_role:
    name: podman_copy
  vars:
    pod_cp__src_dir_or_volume: "{{ maw_prod_gdrive_creds_bu__volume }}"
    pod_cp__dest_dir_or_volume: "{{ maw_prod_gdrive_creds_bu__temp_remote_dir }}"

- name: copy backup directory to controller
  ansible.builtin.fetch:
    dest: "{{ maw_prod_gdrive_creds_bu__control_dir }}"
    src: "{{ _maw_prod_gdrive_creds_bu__file }}"
  loop_control:
    loop_var: _maw_prod_gdrive_creds_bu__file
  loop:
    - "{{ maw_prod_gdrive_creds_bu__temp_remote_dir }}/credentials.json"
    - "{{ maw_prod_gdrive_creds_bu__temp_remote_dir }}/token.json"

- name: finally, delete remote temp directory
  ansible.builtin.file:
    path: "{{ maw_prod_gdrive_creds_bu__temp_remote_dir }}"
    state: absent

- name: set local backup dir
  ansible.builtin.set_fact:
    _maw_prod_gdrive_creds_bu__local_dir: "{{ maw_prod_gdrive_creds_bu__control_dir }}/{{ maw_prod_gdrive_creds_bu__hostname }}{{ maw_prod_gdrive_creds_bu__temp_remote_dir }}"

- name: move files on controller to the root backup dir
  ansible.builtin.command:
    cmd: "mv {{ item }} {{ maw_prod_gdrive_creds_bu__control_dir }}"
  delegate_to: localhost
  with_fileglob:
    - "{{ _maw_prod_gdrive_creds_bu__local_dir }}/*"

- name: delete local backup dir
  ansible.builtin.file:
    path: "{{ _maw_prod_gdrive_creds_bu__local_dir }}"
    state: absent
  delegate_to: localhost
