---
- name: migrate certbot certs
  ansible.builtin.include_role:
    name: podman_copy
  when: certbot_certs_volume.changed
  vars:
    pod_cp__skip_if_src_not_exists: true
    pod_cp__src_dir_or_volume: maw-certbot-certs
    pod_cp__dest_dir_or_volume: "{{ certbot_certs_volume.volume.Name }}"
    pod_cp__command: cp -R /src/internal/. /dest

- name: migrate certbot validation
  ansible.builtin.include_role:
    name: podman_copy
  when: certbot_validation_volume.changed
  vars:
    pod_cp__skip_if_src_not_exists: true
    pod_cp__src_dir_or_volume: maw-certbot-validation
    pod_cp__dest_dir_or_volume: "{{ certbot_validation_volume.volume.Name }}"

- name: migrate maw-certs
  ansible.builtin.include_role:
    name: podman_copy
  when: maw_cert_volume.changed
  vars:
    pod_cp__skip_if_src_not_exists: true
    pod_cp__src_dir_or_volume: maw-certs
    pod_cp__dest_dir_or_volume: "{{ maw_cert_volume.volume.Name }}"

- name: migrate maw-reverse-geocode
  ansible.builtin.include_role:
    name: podman_copy
  when: reverse_geocode_volume.changed
  vars:
    pod_cp__skip_if_src_not_exists: true
    pod_cp__src_dir_or_volume: maw-reverse-geocode
    pod_cp__dest_dir_or_volume: "{{ reverse_geocode_volume.volume.Name }}"

- name: migrate maw-gdrive-creds
  ansible.builtin.include_role:
    name: podman_copy
  when: gdrive_creds_volume.changed
  vars:
    pod_cp__skip_if_src_not_exists: true
    pod_cp__src_dir_or_volume: maw-gdrive-creds
    pod_cp__dest_dir_or_volume: "{{ gdrive_creds_volume.volume.Name }}"
    pod_cp__result_varname: _maw_gdrive__migrated

- name: copy gdrive credentials when not migrated
  block:
    - name: Define tmp dir variable
      ansible.builtin.set_fact:
        mawus_gdrive__tempdir: "{{ remote_home_dir }}/_tmp_ansible_maw_gdrive"

    - name: Ensure temp dir exists
      ansible.builtin.file:
        path: "{{ mawus_gdrive__tempdir }}"
        state: directory
        mode: u+rw

    - name: copy files to temp dir
      ansible.builtin.copy:
        src: "{{ item }}"
        dest: "{{ mawus_gdrive__tempdir }}"
        mode: u+rw
      with_fileglob: "{{ mawus__gdrive_creds_dir }}/*"

    - name: copy google drive credentials to volume
      ansible.builtin.include_role:
        name: podman_copy
      vars:
        pod_cp__src_dir_or_volume: "{{ mawus_gdrive__tempdir }}"
        pod_cp__dest_dir_or_volume: "{{ gdrive_creds_volume.volume.Name }}"

    - name: Cleanup temp dir
      ansible.builtin.file:
        path: "{{ mawus_gdrive__tempdir }}"
        state: absent

  when: gdrive_creds_volume.changed and (_maw_gdrive__migrated is defined) and (not _maw_gdrive__migrated)

- name: migrate maw-google-creds
  ansible.builtin.include_role:
    name: podman_copy
  when: google_creds_volume.changed
  vars:
    pod_cp__skip_if_src_not_exists: true
    pod_cp__src_dir_or_volume: maw-google-creds
    pod_cp__dest_dir_or_volume: "{{ google_creds_volume.volume.Name }}"
    pod_cp__result_varname: _maw_google__migrated

- name: copy google credentials when not migrated
  block:

    - name: Define tmp dir variable
      ansible.builtin.set_fact:
        mawus_google__tempdir: "{{ remote_home_dir }}/_tmp_ansible_maw_google"

    - name: Ensure temp dir exists
      ansible.builtin.file:
        path: "{{ mawus_google__tempdir }}"
        state: directory
        mode: u+rw

    - name: copy files to temp dir
      ansible.builtin.copy:
        src: "{{ item }}"
        dest: "{{ mawus_google__tempdir }}"
        mode: u+rw
      with_fileglob: "{{ mawus__google_email_creds_dir }}/*"

    - name: copy google drive credentials to volume
      ansible.builtin.include_role:
        name: podman_copy
      vars:
        pod_cp__src_dir_or_volume: "{{ mawus_google__tempdir }}"
        pod_cp__dest_dir_or_volume: "{{ google_creds_volume.volume.Name }}"

    - name: Cleanup temp dir
      ansible.builtin.file:
        path: "{{ mawus_google__tempdir }}"
        state: absent

  when: google_creds_volume.changed and (_maw_google__migrated is defined) and (not _maw_google__migrated)
