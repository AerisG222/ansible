---
- name: set the cert dir / volume name and fqdn prefix
  ansible.builtin.set_fact:
    cert_vol: "{{ (maw_cert_volume.volume is defined) | ternary(maw_cert_volume.volume.Name, mawus_config.certs_dir) }}"
    cert_fqdn_prefix: "{{ (mawus_config.env == 'prod') | ternary('', mawus_config.env) }}"

- name: ensure cert dir exists for local projects
  ansible.builtin.file:
    path: "{{ mawus_config.certs_dir }}"
    state: directory
  when: mawus_config.certs_dir | length > 0

# if you add a new environment, you may need to update the maw-certs image to be able to generate certs for the new env
# todo: add logic to maw-certs to dynamically accept new env name
- name: initialize internal certs
  containers.podman.podman_container:
    name: maw-certs
    image: docker.io/aerisg222/maw-certs:latest
    command: "{{ mawus_config.env }} {{ cert_fqdn_prefix }}"
    state: started
    interactive: true
    rm: true
    volume:
      - "{{ cert_vol }}:/maw-certs:rw,z"
  register: certs_container

- name: wait for cert initialization to complete
  ansible.builtin.include_tasks: wait_for_container_to_exit.yml
  vars:
    container_name: maw-certs

# todo: evaluate dev (certs that are generated in managed volume) support
- name: Add ca cert(s) to trusted sources
  become: true
  ansible.builtin.copy:
    dest: "/usr/share/pki/ca-trust-source/anchors/maw_{{ mawus_config.env }}_{{ item | basename }}"
    src: "{{ item }}"
  with_fileglob:
    - "{{ mawus_config.certs_dir }}/ca/ca_*.crt"
  when: mawus_config.certs_dir | length > 0

- name: Make the system aware of the new ca certs
  become: true
  ansible.builtin.command:
    cmd: update-ca-trust
  when: mawus_config.certs_dir | length > 0
