---
- name: create maw-pod pod
  containers.podman.podman_pod:
    name: "{{ mawus_podname }}"
    state: started
    publish:
      - 8080:80
      - 8443:443

- name: define images (prod)
  ansible.builtin.set-fact:
    image_photos: localhost/maw-photos-dev:latest
    image_files: localhost/maw-files-dev:latest
    image_auth: localhost/maw-auth-dev:latest
    image_api: localhost/maw-api-dev:latest
    image_www: localhost/maw-www-dev:latest
    image_gateway: localhost/maw-gateway-dev:latest
  when: maw_is_prod

- name: define images (dev)
    image_photos: docker.io/aerisg222/maw-photos:latest
    image_files: docker.io/aerisg222/maw-files:latest
    image_auth: docker.io/aerisg222/maw-auth:latest
    image_api: docker.io/aerisg222/maw-api:latest
    image_www: docker.io/aerisg222/maw-www:latest
    image_gateway: docker.io/aerisg222/maw-gateway:latest
  when: not maw_is_prod

# redis
- name: create redis container
  containers.podman.podman_container:
    pod: "{{ mawus_podname }}"
    name: maw-redis
    image: "docker.io/redis:{{ redis_version }}-alpine"
    command: redis-server --save 60 1
    state: started
    volume:
      - "{{ redis_volume.volume.Name }}:/data:rw,z"
    label:
      io.containers.autoupdate: image

# postgres
- name: create postgres container
  containers.podman.podman_container:
    pod: "{{ mawus_podname }}"
    name: maw-postgres
    image: "docker.io/postgres:{{ postgres_version }}-alpine"
    state: started
    env_file: "{{ env_file_dir }}/maw-postgres.env"
    volume:
      - "{{ postgres_volume.volume.Name }}:/var/lib/postgresql/data:rw,z"
    label:
      io.containers.autoupdate: image

# solr
- name: create solr container
  containers.podman.podman_container:
    pod: "{{ mawus_podname }}"
    name: maw-solr
    image: "docker.io/solr:{{ solr_version }}"
    state: started
    volume:
      - "{{ solr_volume.volume.Name }}:/var/solr:rw,z"
    label:
      io.containers.autoupdate: image

# auth
- name: create maw-auth container
  containers.podman.podman_container:
    pod: "{{ mawus_podname }}"
    name: maw-auth
    image: "{{ image_auth }}"
    state: started
    env_file: "{{ env_file_dir }}/maw-auth.env"
    volume:
      - "{{ maw_cert_volume.volume.Name }}:/certs:ro,z"
      - "{{ auth_dataprotection_volume.volume.Name }}:/dataprotection:rw,Z"
      - "{{ google_creds_volume.volume.Name }}:/google-creds:ro,z"
    label:
      io.containers.autoupdate: image

# api
- name: create maw-api container
  containers.podman.podman_container:
    pod: "{{ mawus_podname }}"
    name: maw-api
    image: "{{ image_api }}"
    state: started
    env_file: "{{ env_file_dir }}/maw-api.env"
    security-opt:
      - label=disable
    volume:
      - "{{ maw_cert_volume.volume.Name }}:/certs:ro,z"
      - "{{ api_dataprotection_volume.volume.Name }}:/dataprotection:rw,Z"
      - "{{ uploads_volume.volume.Name }}:/maw-uploads:rw,z"
      - /srv/www/website_assets/images:/srv/www/website_assets/images:ro
    label:
      io.containers.autoupdate: image

# www
- name: create maw-www container
  containers.podman.podman_container:
    pod: "{{ mawus_podname }}"
    name: maw-www
    image: "{{ image_www }}"
    state: started
    env_file: "{{ env_file_dir }}/maw-www.env"
    security-opt:
      - label=disable
    volume:
      - "{{ maw_cert_volume.volume.Name }}:/certs:ro,z"
      - "{{ www_dataprotection_volume.volume.Name }}:/dataprotection:rw,Z"
      - "{{ google_creds_volume.volume.Name }}:/google-creds:ro,z"
      - /srv/www/website_assets/images:/srv/www/website_assets/images:ro
      - /srv/www/website_assets/movies:/srv/www/website_assets/movies:ro
    label:
      io.containers.autoupdate: image

# files
- name: create maw-files container
  containers.podman.podman_container:
    pod: "{{ mawus_podname }}"
    name: maw-files
    image: "{{ image_files }}"
    state: started
    volume:
      - "{{ maw_cert_volume.volume.Name }}:/certs:ro,z"
    label:
      io.containers.autoupdate: image

# photos
- name: create maw-photos container
  containers.podman.podman_container:
    pod: "{{ mawus_podname }}"
    name: maw-photos
    image: "{{ image_photos }}"
    state: started
    volume:
      - "{{ maw_cert_volume.volume.Name }}:/certs:ro,z"
    label:
      io.containers.autoupdate: image

# gateway
- name: define gateway volumes
  ansible.builtin.set_fact:
    maw_gateway_volumes:
      - "{{ maw_cert_volume.volume.Name }}:/certs:ro,z"
      - /srv/www/website_assets:/assets:ro
    maw_gateway_volumes_prod:
      - "{{ certbot_validation_volume.volume.Name }}:/var/www/certbot:ro,z"
      - "{{ certbot_certs_volume.volume.Name }}:/etc/letsencrypt:ro,z"

- name: append production specific gateway volumes (prod)
  ansible.builtin.set_fact:
    maw_gateway_volumes: "{{ maw_gateway_volumes + maw_gateway_volumes_prod }}"
  when: maw_is_prod

- name: create maw-gateway container
  containers.podman.podman_container:
    pod: "{{ mawus_podname }}"
    name: maw-gateway
    image: "{{ image_gateway }}"
    state: started
    volume: "{{ maw_gateway_volumes }}"
    security-opt:
      - label=disable
    label:
      io.containers.autoupdate: image
