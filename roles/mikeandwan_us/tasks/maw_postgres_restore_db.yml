- name: "test if {{ db_name }} database exists"
  containers.podman.podman_container:
    name: "{{ mawus_config.env }}-maw-pginit-restore-test"
    pod: "{{ mawus_config.podman_podname }}"
    image: "docker.io/postgres:{{ mawus_config.version_postgres }}"
    env_file: "{{ mawus_config.podman_env_dir }}/maw-postgres.env"
    command:
      - psql
      - '-h'
      - 127.0.0.1
      - '-U'
      - postgres
      - '-d'
      - "{{ db_name }}"
      - '-c'
      - SELECT 1;
    state: started
  ignore_errors: true

- name: "get {{ db_name }} exists test result"
  ansible.builtin.include_tasks: wait_for_container_to_stop.yml
  vars:
    container_name: "{{ mawus_config.env }}-maw-pginit-restore-test"
    exit_code_varname: sql_test_result

- name: "restore {{ db_name }} database"
  containers.podman.podman_container:
    name: "{{ mawus_config.env }}-maw-pginit-restore"
    pod: "{{ mawus_config.podman_podname }}"
    image: "docker.io/postgres:{{ mawus_config.version_postgres }}"
    env_file: "{{ mawus_config.podman_env_dir }}/maw-postgres.env"
    command: "pg_restore -h 127.0.0.1 -U postgres -C -d postgres /postgres_backup/{{ backup_file }}"
    state: started
    interactive: true
    rm: true
    volume:
      - "{{ pg_backup_dir }}:/postgres_backup:rw,Z"
  when: sql_test_result | int == 2

- name: "wait for {{ db_name }} restore"
  ansible.builtin.include_tasks: wait_for_container_to_exit.yml
  vars:
    container_name: "{{ mawus_config.env }}-maw-pginit-restore"
  when: sql_test_result | int == 2

- name: "optimize {{ db_name }} database"
  containers.podman.podman_container:
    name: "{{ mawus_config.env }}-maw-pginit-optimize"
    pod: "{{ mawus_config.podman_podname }}"
    image: "docker.io/postgres:{{ mawus_config.version_postgres }}"
    env_file: "{{ mawus_config.podman_env_dir }}/maw-postgres.env"
    command:
      - psql
      - '-h'
      - 127.0.0.1
      - '-U'
      - postgres
      - '-d'
      - "{{ db_name }}"
      - '-c'
      - VACUUM ANALYZE;
    state: started
    interactive: true
    rm: true
  when: sql_test_result | int == 2

- name: wait for idsrv optimization
  ansible.builtin.include_tasks: wait_for_container_to_exit.yml
  vars:
    container_name: "{{ mawus_config.env }}-maw-pginit-optimize"
  when: sql_test_result | int == 2
