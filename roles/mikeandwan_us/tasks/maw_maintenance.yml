---
- name: Configure Certbot Renew
  ansible.builtin.include_role:
    name: certbot_renew
  vars:
    certbot_ctx:
      service_name: "{{ mawus_config.env }}-certbot-renew"
      systemd_dir: "{{ home }}/.config/systemd/user"
      start_job: false
      enable_job: "{{ mawus_config.env == 'prod' }}"
      pod_name: "{{ mawus_config.podman_podname }}"
      validation_volume_name: "{{ certbot_validation_volume.volume.Name }}"
      certs_volume_name: "{{ certbot_certs_volume.volume.Name }}"
      calendar: 0/12:00:00
  when: mawus_config.env == 'prod'

- name: Configure Reverse Geocoder
  ansible.builtin.include_role:
    name: reverse_geocoder
  vars:
    reverse_geocode_ctx:
      service_name: "{{ mawus_config.env }}-reverse-geocoder"
      systemd_dir: "{{ home }}/.config/systemd/user"
      start_job: false
      enable_job: "{{ mawus_config.env == 'prod' }}"
      pod_name: "{{ mawus_config.podman_podname }}"
      volume_name: "{{ reverse_geocode_volume.volume.Name }}"
      env_file: "{{ mawus_config.podman_env_dir }}/maw-reverse-geocode.env"
      calendar: 00:45:00

- name: Configure Solr Indexer
  ansible.builtin.include_role:
    name: solr_indexer
  vars:
    solr_indexer_ctx:
      service_name: "{{ mawus_config.env }}-solr-indexer"
      systemd_dir: "{{ home }}/.config/systemd/user"
      start_job: false
      enable_job: "{{ mawus_config.env == 'prod' }}"
      pod_name: "{{ mawus_config.podman_podname }}"
      sql_username: "{{ mawus_config.sql_solr_username }}"
      sql_password: "{{ mawus_config.sql_solr_password }}"
      calendar: 00:50:00

- name: Configure Postgres Role Backup
  ansible.builtin.include_role:
    name: postgres_backup_roles
  vars:
    pg_backup_roles_ctx:
      service_name: "{{ mawus_config.env }}-postgres-backup-roles"
      systemd_dir: "{{ home }}/.config/systemd/user"
      start_job: false
      enable_job: "{{ mawus_config.env == 'prod' }}"
      pod_name: "{{ mawus_config.podman_podname }}"
      volume_name: "{{ postgres_backup_volume.volume.Name }}"
      env_file: "{{ mawus_config.podman_env_dir }}/maw-postgres.env"
      postgres_version: "{{ mawus_config.version_postgres }}"
      calendar: 00:55:00

- name: Configure Postgres Backups
  ansible.builtin.include_role:
    name: postgres_backup_database
  loop_control:
    loop_var: pg_backupdb_ctx
  loop:
    - db_name: maw_website
      service_name: "{{ mawus_config.env }}-postgres-backup-mawus"
      systemd_dir: "{{ home }}/.config/systemd/user"
      start_job: false
      enable_job: "{{ mawus_config.env == 'prod' }}"
      pod_name: "{{ mawus_config.podman_podname }}"
      volume_name: "{{ postgres_backup_volume.volume.Name }}"
      env_file: "{{ mawus_config.podman_env_dir }}/maw-postgres.env"
      postgres_version: "{{ mawus_config.version_postgres }}"
      calendar: 01:00:00

    - db_name: idsrv
      service_name: "{{ mawus_config.env }}-postgres-backup-idsrv"
      systemd_dir: "{{ home }}/.config/systemd/user"
      start_job: false
      enable_job: "{{ mawus_config.env == 'prod' }}"
      pod_name: "{{ mawus_config.podman_podname }}"
      volume_name: "{{ postgres_backup_volume.volume.Name }}"
      env_file: "{{ mawus_config.podman_env_dir }}/maw-postgres.env"
      postgres_version: "{{ mawus_config.version_postgres }}"
      calendar: 01:05:00

- name: Configure Postgres Optimizations
  ansible.builtin.include_role:
    name: postgres_optimize
  loop_control:
    loop_var: pg_optimize_ctx
  loop:
    - db_name: maw_website
      service_name: "{{ mawus_config.env }}-postgres-optimize-mawus"
      systemd_dir: "{{ home }}/.config/systemd/user"
      start_job: false
      enable_job: "{{ mawus_config.env == 'prod' }}"
      pod_name: "{{ mawus_config.podman_podname }}"
      env_file: "{{ mawus_config.podman_env_dir }}/maw-postgres.env"
      postgres_version: "{{ mawus_config.version_postgres }}"
      calendar: 01:10:00

    - db_name: idsrv
      service_name: "{{ mawus_config.env }}-postgres-optimize-idsrv"
      systemd_dir: "{{ home }}/.config/systemd/user"
      start_job: false
      enable_job: "{{ mawus_config.env == 'prod' }}"
      pod_name: "{{ mawus_config.podman_podname }}"
      env_file: "{{ mawus_config.podman_env_dir }}/maw-postgres.env"
      postgres_version: "{{ mawus_config.version_postgres }}"
      calendar: 01:15:00

- name: Configure Postgres Backup Cleanup
  ansible.builtin.include_role:
    name: postgres_backup_cleanup
  vars:
    pg_cleanup_ctx:
      service_name: "{{ mawus_config.env }}-postgres-cleanup"
      systemd_dir: "{{ home }}/.config/systemd/user"
      start_job: false
      enable_job: "{{ mawus_config.env == 'prod' }}"
      pod_name: "{{ mawus_config.podman_podname }}"
      volume_name: "{{ postgres_backup_volume.volume.Name }}"
      postgres_version: "{{ mawus_config.version_postgres }}"
      calendar: 01:20:00

- name: Configure Postgres GDrive Daily Archive
  ansible.builtin.include_role:
    name: postgres_gdrive_archive
  vars:
    postgres_gdrive_archive_ctx:
      service_name: "{{ mawus_config.env }}-postgres-archive-daily"
      systemd_dir: "{{ home }}/.config/systemd/user"
      pod_name: "{{ mawus_config.podman_podname }}"
      files_to_archive_volume: "{{ postgres_backup_volume.volume.Name }}"
      creds_volume: "{{ gdrive_creds_volume.volume.Name }}"
      archive_folder: "{{ mawus_config.podman_podname }}-{{ ansible_host }}-pg_backup"
      retain_archive_duration: 10d
      calendar: 01:25:00

- name: Configure Postgres GDrive Monthly Archive
  ansible.builtin.include_role:
    name: postgres_gdrive_archive
  vars:
    postgres_gdrive_archive_ctx:
      service_name: "{{ mawus_config.env }}-postgres-archive-monthly"
      systemd_dir: "{{ home }}/.config/systemd/user"
      pod_name: "{{ mawus_config.podman_podname }}"
      files_to_archive_volume: "{{ postgres_backup_volume.volume.Name }}"
      creds_volume: "{{ gdrive_creds_volume.volume.Name }}"
      archive_folder: "{{ mawus_config.podman_podname }}-{{ ansible_host }}-pg_backup-monthly"
      retain_archive_duration: 2y
      calendar: '*-*-01 01:30:00'
