---
- name: Create user systemd directory if necessary
  ansible.builtin.file:
    path: "{{ home }}/.config/systemd/user"
    recurse: true
    state: directory

- name: define common service and timers
  ansible.builtin.set_fact:
    services:
      - solr-indexer.service
    timers:
      - solr-indexer.timer
    services_prod:
      - certbot-renew.service
      - remote-archive-daily.service
      - remote-archive-monthly.service
      - reverse-geocode.service
    timers_prod:
      - certbot-renew.timer
      - remote-archive-daily.timer
      - remote-archive-monthly.timer
      - reverse-geocode.timer

- name: Merge services and timers
  ansible.builtin.set_fact:
    services: "{{ services + services_prod }}"
    timers: "{{ timers + timers_prod }}"
  when: maw_env == 'prod'

- name: Prepare systemd service and timer files
  ansible.builtin.template:
    backup: true
    src: "systemd/{{ item }}.j2"
    dest: "{{ home }}/.config/systemd/user/{{ item }}"
    mode: u+rw
  loop: "{{ services + timers }}"

- name: Enable timers
  ansible.builtin.systemd:
    name: "{{ item }}"
    enabled: true
    state: started
    scope: user
    daemon_reload: true
  loop: "{{ timers }}"

- name: Configure Postgres Role Backup
  ansible.builtin.include_role:
    name: postgres_backup_roles
  vars:
    db_name: maw_website
    service_name: "{{ mawus_config.env }}-postgres-backup-roles"
    systemd_dir: "{{ home }}/.config/systemd/user"
    pod_name: "{{ mawus_config.podman_podname }}"
    volume_name: "{{ postgres_backup_volume.volume.Name }}"
    env_file: "{{ mawus_config.podman_env_dir }}/maw-postgres.env"
    postgres_version: "{{ mawus_config.version_postgres }}"
    calendar: 00:55:00

- name: Configure Postgres Backups
  ansible.builtin.include_role:
    name: postgres_backup_database
  loop:
    - db_name: maw_website
      service_name: "{{ mawus_config.env }}-postgres-backup-mawus"
      systemd_dir: "{{ home }}/.config/systemd/user"
      pod_name: "{{ mawus_config.podman_podname }}"
      volume_name: "{{ postgres_backup_volume.volume.Name }}"
      env_file: "{{ mawus_config.podman_env_dir }}/maw-postgres.env"
      postgres_version: "{{ mawus_config.version_postgres }}"
      calendar: 01:00:00

    - db_name: idsrv
      service_name: "{{ mawus_config.env }}-postgres-backup-idsrv"
      systemd_dir: "{{ home }}/.config/systemd/user"
      pod_name: "{{ mawus_config.podman_podname }}"
      volume_name: "{{ postgres_backup_volume.volume.Name }}"
      env_file: "{{ mawus_config.podman_env_dir }}/maw-postgres.env"
      postgres_version: "{{ mawus_config.version_postgres }}"
      calendar: 01:05:00

- name: Configure Postgres Optimizations
  ansible.builtin.include_role:
    name: postgres_optimize
  loop:
    - db_name: maw_website
      service_name: "{{ mawus_config.env }}-postgres-optimize-mawus"
      systemd_dir: "{{ home }}/.config/systemd/user"
      pod_name: "{{ mawus_config.podman_podname }}"
      env_file: "{{ mawus_config.podman_env_dir }}/maw-postgres.env"
      postgres_version: "{{ mawus_config.version_postgres }}"
      calendar: 01:10:00

    - db_name: idsrv
      service_name: "{{ mawus_config.env }}-postgres-optimize-idsrv"
      systemd_dir: "{{ home }}/.config/systemd/user"
      pod_name: "{{ mawus_config.podman_podname }}"
      env_file: "{{ mawus_config.podman_env_dir }}/maw-postgres.env"
      postgres_version: "{{ mawus_config.version_postgres }}"
      calendar: 01:15:00

- name: Configure Postgres Backup Cleanup
  ansible.builtin.include_role:
    name: postgres_backup_cleanup
  vars:
    service_name: "{{ mawus_config.env }}-postgres-cleanup"
    systemd_dir: "{{ home }}/.config/systemd/user"
    pod_name: "{{ mawus_config.podman_podname }}"
    volume_name: "{{ postgres_backup_volume.volume.Name }}"
    postgres_version: "{{ mawus_config.version_postgres }}"
    calendar: 01:20:00
