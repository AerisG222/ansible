---
- name: remote preparation (copy files to remote if needed)
  block:

    - name: set init dir
      ansible.builtin.set_fact:
        pginit_dir: ./postgres_init

    - name: "prepare {{ pginit_dir }} directory"
      ansible.builtin.file:
        path: "{{ pginit_dir }}"
        state: directory

    - name: copy backup files
      ansible.builtin.copy:
        src: "{{ mawus_config.pg_backup_host_dir }}"
        dest: "{{ pginit_dir }}"

  when: ansible_connection != 'local'

- name: local preparation
  block:

    - name: set init dir
      ansible.builtin.set_fact:
        pginit_dir: "{{ mawus_config.pg_backup_host_dir }}"

  when: ansible_connection == 'local'

- name: create roles
  containers.podman.podman_container:
    name: "{{ mawus_config.env }}-maw-pginit-roles"
    pod: "{{ mawus_config.podman_podname }}"
    image: "docker.io/postgres:{{ mawus_config.version_postgres }}"
    env_file: "{{ mawus_config.podman_env_dir }}/maw-postgres.env"
    command: psql -h 127.0.0.1 -U postgres -f /postgres_init/roles.sql
    state: started
    interactive: true
    rm: true
    volume:
      - "{{ pginit_dir }}:/postgres_init:rw,Z"

- name: wait for create roles container
  ansible.builtin.include_tasks: wait_for_container_to_exit.yml
  vars:
    container_name: "{{ mawus_config.env }}-maw-pginit-roles"

- name: set role passwords block
  ansible.builtin.include_tasks: maw_postgres_set_role_password.yml
  loop_control:
    label: "{{ item.username }}"
  loop:
    - username: "{{ mawus_config.sql_username }}"
      password: "{{ mawus_config.sql_password }}"
    - username: idsrv
      password: "{{ mawus_config.sql_idsrv_password }}"
    - username: svc_solr
      password: "{{ mawus_config.sql_solr_password }}"

- name: restore idsrv if needed
  ansible.builtin.include_tasks: maw_postgres_restore_db.yml
  vars:
    db_name: idsrv
    backup_file: "{{ mawus_config.pg_backup_idsrv }}"

- name: restore maw_website if needed
  ansible.builtin.include_tasks: maw_postgres_restore_db.yml
  vars:
    db_name: maw_website
    backup_file: "{{ mawus_config.pg_backup_www }}"

- name: "remove temp {{ pginit_dir }} directory for remote connections"
  ansible.builtin.file:
    path: "{{ pginit_dir }}"
    state: absent
  when: ansible_connection != 'local'
