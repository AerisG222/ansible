---
- name: update metadata and packages
  become: yes
  ansible.builtin.dnf:
    update_cache: yes
    name: '*'
    state: latest
  tags: skip_ansible_lint

- name: add ssh public keys
  ansible.builtin.authorized_key:
    user: "{{ ansible_user }}"
    state: present
    key: "{{ lookup('file', lookup('env','HOME') + '/.ssh/id_ed25519.pub') }}"

- name: validate ssh
  delegate_to: localhost
  ansible.builtin.command:
    cmd: ssh {{ ansible_user }}@{{ ansible_host }} "echo success"
  register: validate_ssh_output
  changed_when: false

- name: validate ssh output
  ansible.builtin.fail:
    msg: Could not confirm SSH connectivity
  when: validate_ssh_output.stdout != "success"
  ignore_errors: "{{ ansible_check_mode }}"

# https://www.digitalocean.com/community/tutorials/how-to-harden-openssh-on-ubuntu-18-04
# https://www.cyberciti.biz/tips/linux-unix-bsd-openssh-server-best-practices.html
- name: harden ssh
  become: yes
  ansible.builtin.lineinfile:
    path: "/etc/ssh/sshd_config"
    backup: yes
    regex: "^(#)?{{ item.key }}"
    line: "{{ item.key }} {{ item.value }}"
    state: present
    validate: sshd -t -f %s
  loop:
    - { key: "PubkeyAuthentication", value: "yes" }  # should be on by default
    - { key: "MaxAuthTries", value: "3" }
    - { key: "LoginGraceTime", value: "10" }
    - { key: "PermitRootLogin", value: "no" }
    - { key: "PermitEmptyPasswords", value: "no" }
    - { key: "ChallengeResponseAuthentication", value: "no" }
    - { key: "KerberosAuthentication", value: "no" }
    - { key: "GSSAPIAuthentication", value: "no" }
    - { key: "PasswordAuthentication", value: "no" }
    - { key: "KbdInteractiveAuthentication", value: "no" }
    - { key: "HostbasedAuthentication", value: "no" }
    - { key: "X11Forwarding", value: "no" }
    - { key: "AllowUsers", value: "{{ ansible_user }} {{ allow_ssh_users }}" }
  notify:
    - reload sshd
